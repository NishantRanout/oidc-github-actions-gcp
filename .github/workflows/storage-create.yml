name: bucket-create
on:
  workflow_dispatch
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - "iac/terraform/storage/*"
  #     - "iac/terraform/storage/dev/**"
defaults:
  run:
    shell: bash
    working-directory: ./iac/terraform/storage
permissions:
  contents: read
jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    # If these permissions are missing, the workflow might not work.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: Configure GCP credentials
        id: auth
        uses: google-github-actions/auth@v2.0.0
        with:
          project_id: 'poc-test-424208'
          # Value from command: gcloud iam workload-identity-pools providers describe github-actions --workload-identity-pool="github-actions-pool" --location="global"
          workload_identity_provider: "projects/719424280961/locations/global/workloadIdentityPools/github-pool-1/providers/github-provider"
          service_account: "testing1@poc-test-424208.iam.gserviceaccount.com"
      - name: Echo Everything
        run: printenv
      # - name: Setup GCloud SDK
      #   uses: "google-github-actions/setup-gcloud@v1"
      #   with:
      #     version: ">= 363.0.0"
      # - name: auth list
      #   run: gcloud auth list
      # - name: Authenticate to Google Cloud
      #   run: gcloud auth print-access-token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform validate
        id: validate
        run: terraform validate
      - name: Terraform plan
        id: plan
        run: terraform plan -var-file=./dev/terraform.tfvars -no-color -input=false
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        run: terraform apply -var-file=./dev/terraform.tfvars -auto-approve -input=false
